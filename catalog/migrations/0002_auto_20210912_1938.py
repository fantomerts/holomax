# Generated by Django 3.2.7 on 2021-09-12 14:38

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_name', models.CharField(help_text="Enter an actor's name", max_length=30)),
                ('date_of_birth', models.CharField(help_text='Enter a date of birth of director', max_length=10, null=True)),
                ('photo', models.CharField(help_text='Enter URL of a photo for actor', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(help_text='Enter a movie country', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director_name', models.CharField(help_text="Enter a director's name", max_length=30)),
                ('date_of_birth', models.CharField(help_text='Enter a date of birth of director', max_length=10, null=True)),
                ('photo', models.CharField(help_text='Enter URL of a photo for director', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter a fact', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a studio title', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a movie title', max_length=200)),
                ('timing', models.IntegerField(help_text='Enter a movie timing', null=True)),
                ('summary', models.CharField(help_text='Enter a brief description of the movie', max_length=1000, null=True)),
                ('release', models.CharField(help_text='Enter a date of movie release', max_length=10, null=True)),
                ('poster', models.CharField(help_text='Enter URL of a movie poster', max_length=1000, null=True)),
                ('actor', models.ManyToManyField(help_text='Select an actor for this movie', to='catalog.Actor')),
                ('country', models.ManyToManyField(help_text='Select a country for this movie', to='catalog.Country')),
                ('director', models.ManyToManyField(help_text='Select a director for this movie', to='catalog.Director')),
                ('fact', models.ManyToManyField(help_text='Select a fact about this movie', to='catalog.Fact')),
                ('genre', models.ManyToManyField(help_text='Select a genre for this movie', to='catalog.Genre')),
                ('studio', models.ManyToManyField(help_text='Select a studio for this movie', to='catalog.Studio')),
            ],
        ),
        migrations.AddField(
            model_name='director',
            name='fact',
            field=models.ManyToManyField(help_text='Select a fact about this director', to='catalog.Fact'),
        ),
        migrations.AddField(
            model_name='actor',
            name='fact',
            field=models.ManyToManyField(help_text='Select a fact about this actor', to='catalog.Fact'),
        ),
    ]
